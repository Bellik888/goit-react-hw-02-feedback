{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Statistic/Statistic.js","components/Notification/Notification.js","App.js","index.js"],"names":["FeedbackOptions","chooseGoodFeedback","chooseNeutralFeedback","chooseBadFeedback","onClick","Section","title","children","Statistic","good","neutral","bad","total","positivePercentage","Notification","message","App","state","setState","prev","countTotalFeedback","countPositiveFeedbackPercentage","Math","floor","this","className","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAAaA,EAAkB,SAAC,GAIzB,IAHLC,EAGI,EAHJA,mBACAC,EAEI,EAFJA,sBACAC,EACI,EADJA,kBAEA,OACE,gCACE,wBAAQC,QAASH,EAAjB,kBACA,wBAAQG,QAASF,EAAjB,qBACA,wBAAQE,QAASD,EAAjB,qBCTOE,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC/B,OACE,oCACE,6BAAKD,IACJC,MCJMC,EAAY,SAAC,GAMnB,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,IACAC,EAEI,EAFJA,MACAC,EACI,EADJA,mBAEA,OACE,gCACE,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,YCbOC,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC7B,OAAO,4BAAIA,KCMPC,E,4MACJC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPV,mBAAqB,WACnB,EAAKiB,UAAS,SAAAC,GAAI,MAAK,CAAEV,KAAMU,EAAKV,KAAO,O,EAE7CP,sBAAwB,WACtB,EAAKgB,UAAS,SAAAC,GAAI,MAAK,CAAET,QAASS,EAAKT,QAAU,O,EAEnDP,kBAAoB,WAClB,EAAKe,UAAS,SAAAC,GAAI,MAAK,CAAER,IAAKQ,EAAKR,IAAM,O,EAE3CS,mBAAqB,WACnB,MAA6B,EAAKH,MAElC,OAFA,EAAMR,KAAN,EAAYC,QAAZ,EAAqBC,K,EAIvBU,gCAAkC,WAChC,MAA6B,EAAKJ,MAA5BR,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,QAASC,EAArB,EAAqBA,IAErB,OADyBW,KAAKC,MAAc,IAAPd,GAAeA,EAAOC,EAAUC,K,4CAIvE,WACE,MAA6Ba,KAAKP,MAA5BR,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,QAASC,EAArB,EAAqBA,IAEnBS,EAKEI,KALFJ,mBACAnB,EAIEuB,KAJFvB,mBACAC,EAGEsB,KAHFtB,sBACAC,EAEEqB,KAFFrB,kBACAkB,EACEG,KADFH,gCAEF,OACE,sBAAKI,UAAU,MAAf,UACE,cAAC,EAAD,CAASnB,MAAO,wBAAhB,SACE,cAAC,EAAD,CACEL,mBAAoBA,EACpBC,sBAAuBA,EACvBC,kBAAmBA,MAItBiB,IAAuB,EACtB,cAAC,EAAD,CAASd,MAAO,aAAhB,SACE,cAAC,EAAD,CACEG,KAAMA,EACNE,IAAKA,EACLD,QAASA,EACTE,MAAOQ,IACPP,mBAAoBQ,QAIxB,cAAC,EAAD,CAAcN,QAAS,6B,GAxDfW,aA+DHV,IChEfW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.28706f23.chunk.js","sourcesContent":["export const FeedbackOptions = ({\n  chooseGoodFeedback,\n  chooseNeutralFeedback,\n  chooseBadFeedback,\n}) => {\n  return (\n    <div>\n      <button onClick={chooseGoodFeedback}>Good</button>\n      <button onClick={chooseNeutralFeedback}>Neutral</button>\n      <button onClick={chooseBadFeedback}>Bad</button>\n    </div>\n  );\n};\n","export const Section = ({ title, children }) => {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\n","export const Statistic = ({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) => {\n  return (\n    <div>\n      <p>Good : {good}</p>\n      <p>Neutral : {neutral}</p>\n      <p>Bad : {bad}</p>\n      <p>Total : {total}</p>\n      <p>Positive feedback : {positivePercentage} %</p>\n    </div>\n  );\n};\n","export const Notification = ({ message }) => {\n  return <p>{message}</p>;\n};\n","import { Component } from 'react';\nimport './App.css';\nimport { FeedbackOptions } from './components/FeedbackOptions/FeedbackOptions';\nimport { Section } from './components/Section/Section';\nimport { Statistic } from './components/Statistic/Statistic';\nimport { Notification } from './components/Notification/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  chooseGoodFeedback = () => {\n    this.setState(prev => ({ good: prev.good + 1 }));\n  };\n  chooseNeutralFeedback = () => {\n    this.setState(prev => ({ neutral: prev.neutral + 1 }));\n  };\n  chooseBadFeedback = () => {\n    this.setState(prev => ({ bad: prev.bad + 1 }));\n  };\n  countTotalFeedback = () => {\n    let { good, neutral, bad } = this.state;\n    let total = good + neutral + bad;\n    return total;\n  };\n  countPositiveFeedbackPercentage = () => {\n    let { good, neutral, bad } = this.state;\n    let positivePercentage = Math.floor((good * 100) / (good + neutral + bad));\n    return positivePercentage;\n  };\n\n  render() {\n    let { good, neutral, bad } = this.state;\n    let {\n      countTotalFeedback,\n      chooseGoodFeedback,\n      chooseNeutralFeedback,\n      chooseBadFeedback,\n      countPositiveFeedbackPercentage,\n    } = this;\n    return (\n      <div className=\"App\">\n        <Section title={'Please leave feedback'}>\n          <FeedbackOptions\n            chooseGoodFeedback={chooseGoodFeedback}\n            chooseNeutralFeedback={chooseNeutralFeedback}\n            chooseBadFeedback={chooseBadFeedback}\n          />\n        </Section>\n\n        {countTotalFeedback() > 0 ? (\n          <Section title={'Statistics'}>\n            <Statistic\n              good={good}\n              bad={bad}\n              neutral={neutral}\n              total={countTotalFeedback()}\n              positivePercentage={countPositiveFeedbackPercentage()}\n            />\n          </Section>\n        ) : (\n          <Notification message={'No feedback given'} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}